

# YouTube Playlist Manager

This Python script simulates a simplified version of a playlist manager for a hypothetical music streaming platform, akin to YouTube. It allows users to manage playlists, shuffle songs, shorten playlists, and view playlist previews. The script also includes a basic user login system to demonstrate access control.

## Features

- **User Authentication**: Implements a simple login mechanism that checks for a username and password match. Limits login attempts to prevent brute-force attacks.
  
- **Playlist Management**: Users can view, shuffle, and shorten playlists. Playlists are represented as lists of video IDs, with corresponding titles stored in dictionaries for easy lookup.
  
- **Dynamic Playlist Display**: Playlists can be displayed in full or as previews. Full display shows up to 5 videos at a time, with an option to view more. Previews show the playlist title and video count.
  
- **Shuffling and Shortening Playlists**: Users can shuffle the order of videos in a playlist or remove the first video from a playlist, simulating playlist editing features.
  
- **Personal Homepage**: Displays the username and subscriber count, along with previews of the user's playlists.

## Usage

1. Run the script. You will be prompted to enter a username and password.
2. Upon successful login, the personal homepage is displayed, showing the username, subscriber count, and playlist previews.
3. You can then interact with the main interface to choose actions such as viewing a full playlist, shuffling a playlist, or shortening a playlist.

## Example Interaction Flow

1. **Login Prompt**:
   - Enter "MusicFan'03" as the username and "hunter1" as the password.
   
2. **Personal Homepage Display**:
   - Shows the username "MusicFan'03" and subscriber count.
   - Lists previews of playlists "Top Hits", "Top 2010s", and "My Mix".

3. **Main Interface Actions**:
   - Choose a playlist to view or manage.
   - Options include shuffling the playlist or shortening it by removing the first video.

